/*━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 *   ██████╗ ██████╗ ███╗   ██╗███████╗████████╗ █████╗ ███╗   ██╗████████╗███████╗
 *  ██╔════╝██╔═══██╗████╗  ██║██╔════╝╚══██╔══╝██╔══██╗████╗  ██║╚══██╔══╝██╔════╝
 *  ██║     ██║   ██║██╔██╗ ██║███████╗   ██║   ███████║██╔██╗ ██║   ██║   ███████╗
 *  ██║     ██║   ██║██║╚██╗██║╚════██║   ██║   ██╔══██║██║╚██╗██║   ██║   ╚════██║
 *  ╚██████╗╚██████╔╝██║ ╚████║███████║   ██║   ██║  ██║██║ ╚████║   ██║   ███████║
 *   ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═══╝   ╚═╝   ╚══════╝
 * 
 * ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 * 【模块功能】
 * ┌─────────────────┬───────────────────────────────────────────────────────────┐
 * │ 系统参数         │ 定义系统全局常量和配置参数                                  │
 * ├─────────────────┼───────────────────────────────────────────────────────────┤
 * │ 标签数据         │ 存储标签频率、尺寸比例等预处理数据                           │
 * ├─────────────────┼───────────────────────────────────────────────────────────┤
 * │ 历史统计         │ 提供不同类型对象的历史访问频率数据                           │
 * └─────────────────┴───────────────────────────────────────────────────────────┘
 * ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━*/

#pragma once
#include <vector>
#include <array>

/*╔══════════════════════════════ 系统参数定义 ═══════════════════════════════╗*/
/**
 * @brief     输入参数
 * @details   系统运行所需的基本配置参数:
 * ┌──────────────────────────────────────────────────────────────────────┐
 * │ T: 时间范围                                                          │
 * │ M: 标签数量                                                          │
 * │ N: 磁盘数量                                                          │
 * │ V: 磁盘容量                                                          │
 * │ G: 令牌数量                                                          │
 * │ k1,k2: GC令牌                                                        │
 * └──────────────────────────────────────────────────────────────────────┘
 */
inline int T, M, N, V, G, k1, k2;  
inline float G_float;              // 令牌数浮点表示

/**
 * @brief     优化参数
 * @details   系统性能优化的配置项:
 * ┌──────────────────────────────────────────────────────────────────────┐
 * │ DATA_COMPRESSION: 数据压缩系数(0-1)                                  │
 * │ IS_INTERVAL_REVERSE: 是否间隔反向                                    │
 * │ IS_EXTEND: 是否向两端拓展                                            │
 * │ START_TAG: 起始标签(范围3-13)                                        │
 * │ WRITE_START: 写入起点(范围2-10)                                      │
 * └──────────────────────────────────────────────────────────────────────┘
 */
inline const float DATA_COMPRESSION = 0.89;
inline const int IS_INTERVAL_REVERSE = 1;
inline const int IS_EXTEND = 1;
inline int const START_TAG = 3;
inline int const WRITE_START = 10;

/**
 * @brief     系统常量
 * @details   系统运行的限制与阈值:
 * ┌──────────────────────────────────────────────────────────────────────┐
 * │ WINDOW_SIZE: 滑动窗口大小                                            │
 * │ SCORES_DECAY_DISTANCE: 得分衰减距离                                  │
 * │ FRE_PER_SLICING: 每个时间片的频率                                    │
 * │ MAX_SLICING_NUM: 最大时间片数量                                      │
 * │ MAX_TAG_NUM: 最大标签数量                                            │
 * │ MAX_DISK_NUM: 最大磁盘数量                                           │
 * │ MAX_DISK_SIZE: 最大磁盘大小                                          │
 * │ MAX_REQUEST_NUM: 最大请求数量                                        │
 * │ MAX_OBJECT_NUM: 最大对象数量                                         │
 * │ LEN_REQ: 请求循环缓冲区长度                                          │
 * │ REP_NUM: 副本数量                                                    │
 * │ EXTRA_TIME: 额外时间                                                 │
 * │ MAX_G: 最大令牌数                                                    │
 * └──────────────────────────────────────────────────────────────────────┘
 */
inline const int WINDOW_SIZE = 10;
inline const int SCORES_DECAY_DISTANCE = 350;
inline const int FRE_PER_SLICING = 1800;
inline const int MAX_SLICING_NUM = (86400+1);
inline const int MAX_TAG_NUM = 16;
inline const int MAX_DISK_NUM = (10 + 1);
inline const int MAX_DISK_SIZE = (16384 + 1);
inline const int MAX_REQUEST_NUM = (30000000 + 1);
inline const int MAX_OBJECT_NUM = (100000 + 1);
inline const int LEN_REQ = 1000000;
inline const int REP_NUM = 3;
inline const int EXTRA_TIME = 105;
inline const int MAX_G = 1000;
/*╚═════════════════════════════════════════════════════════════════════════╝*/

/*╔══════════════════════════════ 标签数据定义 ═══════════════════════════════╗*/
/**
 * @brief     标签相关数据
 * @details   包含标签的频率与尺寸分布:
 * ┌──────────────────────────────────────────────────────────────────────┐
 * │ TAG_ORDERS: 标签读取频率顺序                                         │
 * │ TAG_SIZE_RATE: 标签尺寸比例(最大值分布)                              │
 * └──────────────────────────────────────────────────────────────────────┘
 */
inline std::vector<std::vector<int>> TAG_ORDERS;

inline std::vector<double> TAG_SIZE_RATE = {0, 
    0.04294, 0.05094, 0.07206, 0.06001, 0.13109, 0.05974, 0.04092, 0.03887, 
    0.05502, 0.06854, 0.04131, 0.1375, 0.04064, 0.06147, 0.04098, 0.0579};
/*╚═════════════════════════════════════════════════════════════════════════╝*/

/*╔══════════════════════════════ 历史数据定义 ═══════════════════════════════╗*/
/**
 * @brief     写入频率历史数据
 * @details   记录不同时间点的写入操作频率
 */
inline std::vector<std::vector<int>> WRITE_COUNT = 
{{734, 707, 592, 452, 302, 188, 10484, 28554, 43780, 55311, 60364, 59864, 53265, 41411, 25559, 15661, 34833, 59149, 80129, 96387, 107562, 112707, 111300, 103506, 94207, 118732, 115691, 60859, 3224, 382, 537, 695, 740, 677, 532, 348, 222, 148, 184, 315, 455, 639, 704, 693, 607, 447, 7460, 12941, 0}, {560, 654, 565, 474, 317, 192, 140, 190, 293, 416, 584, 635, 604, 494, 402, 2839, 19689, 37579, 58790, 74670, 77978, 65834, 45667, 48297, 97280, 137525, 115445, 63163, 50061, 71008, 90987, 105856, 110797, 104537, 88896, 68573, 47409, 29741, 12506, 283, 400, 531, 698, 635, 529, 574, 10710, 9529, 0}, {453, 270, 162, 166, 244, 392, 598, 655, 722, 641, 505, 327, 205, 157, 181, 303, 471, 624, 678, 671, 570, 397, 265, 143, 158, 5995, 39492, 99835, 149066, 140034, 99279, 69792, 55926, 53521, 52465, 63230, 81453, 94927, 103698, 107426, 104667, 98189, 85733, 69258, 49187, 26843, 15632, 9085, 0}, {141, 110, 67, 58, 90, 142, 211, 246, 253, 256, 660, 8721, 18812, 28354, 37150, 50851, 75573, 99211, 123638, 141390, 145141, 131322, 104303, 73696, 107897, 162021, 154478, 78892, 2369, 262, 248, 188, 117, 80, 48, 69, 122, 192, 226, 265, 262, 188, 156, 88, 58, 499, 11097, 8692, 0}, {308, 353, 344, 315, 226, 134, 93, 77, 129, 191, 318, 364, 360, 332, 248, 169, 111, 76, 108, 176, 243, 334, 367, 349, 277, 203, 146, 12131, 46310, 76429, 107047, 129563, 150425, 188174, 201340, 182556, 136278, 91984, 59579, 55240, 48592, 39828, 29808, 18316, 5955, 545, 10741, 9326, 0}, {194, 342, 405, 477, 514, 439, 366, 233, 128, 114, 141, 2545, 17512, 59387, 115205, 151036, 153928, 123259, 71146, 46809, 30242, 16960, 2238, 429, 481, 514, 471, 362, 9875, 25127, 38151, 53608, 71089, 87322, 101275, 109179, 110597, 104375, 92074, 76461, 58746, 42322, 28868, 16411, 440, 669, 10930, 9845, 0}, {567, 409, 297, 152, 123, 182, 321, 476, 606, 692, 607, 487, 342, 9039, 61813, 101614, 106182, 82716, 37686, 30468, 39141, 45835, 63555, 78262, 92261, 104976, 111508, 107844, 91977, 69849, 45442, 22101, 5034, 359, 192, 152, 151, 235, 374, 540, 634, 612, 564, 417, 279, 488, 10699, 9337, 0}, {450, 240, 161, 157, 238, 374, 493, 653, 684, 624, 520, 339, 241, 140, 189, 297, 439, 577, 672, 1236, 24798, 53057, 65771, 58514, 33888, 4192, 419, 17499, 55151, 85977, 105505, 120940, 123973, 112352, 89477, 62118, 61002, 64230, 64422, 61982, 55413, 47301, 36693, 24740, 11353, 872, 10050, 10555, 0}, {385, 423, 486, 480, 360, 223, 139, 86, 114, 184, 285, 395, 479, 450, 436, 314, 213, 126, 111, 143, 250, 372, 461, 488, 10271, 33477, 55124, 73783, 87562, 97520, 101102, 107643, 113936, 114182, 106180, 89757, 84481, 118409, 144894, 95058, 23553, 258, 342, 496, 479, 440, 10430, 10152, 0}, {435, 340, 207, 121, 130, 192, 311, 383, 547, 521, 470, 393, 241, 146, 116, 152, 239, 375, 430, 489, 517, 419, 9238, 22460, 33538, 59557, 109741, 148491, 167149, 162804, 147207, 138922, 150631, 154642, 149868, 136062, 113750, 85842, 49528, 14098, 531, 527, 436, 301, 186, 418, 10704, 9331, 0}, {64, 99, 132, 231, 304, 290, 267, 202, 160, 76, 56, 63, 122, 195, 257, 276, 304, 237, 3841, 18128, 34040, 75959, 120412, 152951, 168625, 165490, 146180, 110873, 64479, 54050, 61493, 55509, 41916, 22632, 1911, 254, 310, 304, 236, 187, 121, 65, 67, 110, 145, 210, 8632, 11941, 0}, {133, 188, 313, 448, 597, 667, 671, 562, 403, 237, 43655, 114957, 151497, 129812, 107606, 122909, 121272, 100419, 65651, 21187, 185, 143, 196, 339, 502, 621, 665, 1119, 8302, 12523, 18348, 25314, 31857, 37544, 41235, 41846, 39470, 34701, 27820, 20767, 14562, 9410, 2681, 194, 328, 462, 8970, 12400, 0}, {72, 114, 155, 228, 316, 342, 296, 8358, 36584, 61087, 51046, 21643, 696, 197, 284, 331, 348, 281, 214, 147, 99, 57, 99, 172, 12470, 49601, 89878, 127908, 151962, 155233, 139222, 116967, 93905, 70690, 60468, 47257, 31320, 13921, 959, 230, 145, 81, 68, 107, 180, 264, 7539, 13062, 0}, {178, 103, 102, 196, 326, 437, 2127, 20856, 42370, 59206, 70699, 74245, 70603, 60212, 42778, 21506, 3366, 48293, 103518, 118849, 88452, 26116, 102, 125, 218, 319, 413, 538, 508, 463, 317, 188, 3924, 15491, 26758, 36892, 45461, 51512, 55440, 56318, 54917, 50751, 43812, 35804, 25244, 14003, 10431, 13094, 0}, {212, 144, 86, 57, 98, 179, 260, 285, 334, 360, 272, 177, 115, 95, 84, 137, 213, 284, 324, 362, 289, 234, 127, 82, 61, 101, 179, 262, 2973, 32333, 66010, 91958, 112131, 135401, 148238, 146797, 134481, 120560, 155419, 200076, 205125, 165804, 92659, 47196, 30057, 11378, 9482, 10856, 0}, {456, 464, 407, 249, 171, 114, 114, 165, 270, 1992, 16130, 32012, 46391, 59801, 78006, 125416, 212865, 235658, 181818, 112766, 93903, 69786, 43627, 18910, 387, 155, 118, 105, 198, 268, 409, 444, 499, 439, 340, 213, 115, 91, 134, 204, 342, 455, 462, 468, 379, 712, 11290, 8554, 0}};

/**
 * @brief     删除频率历史数据
 * @details   记录不同时间点的删除操作频率
 */
inline std::vector<std::vector<int>> DEL_COUNT = 
{{0, 0, 18, 26, 42, 34, 17, 15, 9, 23, 32, 80, 64, 61, 71, 28, 8, 34, 68, 81, 27, 4, 6, 1, 1, 3, 3, 3, 4, 2, 4, 6, 4, 5, 3, 7, 3, 5, 7, 3, 4, 1, 0, 0, 0, 1, 0, 0, 0}, {0, 0, 22, 26, 31, 32, 31, 18, 16, 24, 42, 64, 57, 47, 57, 25, 6, 30, 67, 92, 107, 2, 1, 1, 3, 1, 0, 4, 1, 2, 2, 0, 1, 6, 8, 2, 3, 1, 4, 1, 1, 3, 1, 1, 0, 0, 1, 0, 0}, {0, 0, 0, 2, 3, 1, 3, 1, 2, 2, 1, 4, 4, 6, 7, 2, 6, 38, 57, 77, 100, 87, 23, 9, 19, 60, 98, 121, 115, 96, 76, 67, 74, 111, 116, 130, 183, 135, 75, 39, 4, 4, 1, 1, 0, 0, 0, 0, 0}, {0, 0, 1, 3, 0, 1, 1, 2, 0, 3, 1, 1, 2, 1, 3, 0, 2, 2, 3, 0, 0, 5, 0, 0, 2, 4, 3, 2, 5, 5, 7, 3, 7, 7, 4, 4, 170, 125, 83, 70, 61, 65, 71, 87, 73, 33, 2, 0, 0}, {0, 0, 16, 37, 37, 25, 16, 12, 10, 26, 48, 4, 7, 7, 7, 1, 0, 1, 1, 0, 0, 0, 3, 0, 0, 10, 6, 1, 1, 4, 3, 4, 7, 8, 5, 7, 2, 3, 5, 2, 5, 1, 1, 0, 0, 1, 1, 0, 0}, {0, 0, 2, 2, 3, 1, 0, 0, 0, 1, 1, 6, 3, 1, 8, 3, 0, 1, 2, 0, 0, 2, 1, 0, 2, 6, 1, 4, 9, 1, 5, 7, 2, 5, 127, 151, 179, 137, 76, 67, 46, 72, 69, 78, 62, 38, 1, 0, 0}, {0, 0, 25, 29, 29, 34, 21, 16, 10, 28, 39, 53, 58, 72, 76, 23, 5, 43, 61, 87, 72, 3, 8, 1, 5, 3, 3, 3, 4, 5, 11, 9, 4, 9, 3, 3, 4, 1, 7, 3, 1, 2, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 23, 30, 45, 37, 19, 12, 13, 28, 49, 68, 59, 53, 69, 17, 7, 30, 59, 87, 30, 3, 7, 1, 1, 0, 3, 2, 5, 4, 2, 0, 7, 6, 8, 5, 4, 0, 10, 4, 3, 4, 2, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 1, 6, 2, 1, 0, 2, 4, 5, 1, 1, 6, 4, 0, 0, 3, 2, 0, 0, 1, 0, 1, 0, 2, 1, 4, 2, 3, 7, 4, 87, 104, 107, 127, 155, 124, 82, 64, 58, 62, 72, 87, 72, 27, 5, 0, 0}, {0, 0, 0, 2, 4, 2, 0, 1, 2, 1, 0, 0, 3, 3, 3, 14, 4, 35, 65, 101, 94, 75, 34, 20, 14, 49, 83, 105, 109, 112, 80, 77, 64, 110, 140, 149, 145, 115, 4, 6, 3, 8, 1, 0, 0, 2, 0, 0, 0}, {0, 0, 20, 32, 39, 26, 13, 17, 17, 19, 34, 72, 72, 56, 55, 27, 6, 29, 73, 106, 89, 3, 5, 2, 1, 4, 4, 4, 5, 4, 1, 3, 3, 9, 5, 3, 3, 5, 4, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0}, {0, 0, 21, 32, 36, 29, 0, 0, 0, 2, 2, 2, 6, 3, 1, 1, 0, 4, 0, 0, 0, 0, 1, 1, 2, 5, 3, 2, 3, 4, 3, 5, 2, 3, 1, 3, 3, 3, 4, 2, 4, 4, 69, 78, 55, 39, 3, 0, 0}, {0, 0, 14, 29, 30, 31, 31, 8, 16, 21, 40, 68, 68, 50, 74, 25, 5, 28, 55, 106, 47, 4, 5, 1, 1, 0, 2, 6, 5, 3, 1, 0, 0, 4, 10, 9, 4, 1, 4, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 1, 1, 0, 2, 3, 4, 1, 1, 1, 0, 3, 3, 6, 0, 0, 3, 1, 0, 0, 1, 2, 1, 0, 2, 4, 5, 8, 3, 4, 3, 1, 8, 3, 2, 145, 108, 78, 68, 63, 59, 71, 65, 67, 47, 3, 0, 0}, {0, 0, 19, 27, 36, 36, 15, 9, 8, 24, 45, 57, 59, 52, 6, 0, 1, 1, 0, 0, 0, 2, 0, 0, 3, 2, 3, 3, 2, 3, 4, 3, 5, 102, 131, 125, 175, 120, 91, 82, 49, 86, 67, 88, 84, 39, 4, 0, 0}, {0, 0, 1, 1, 2, 1, 0, 2, 0, 1, 1, 1, 3, 5, 5, 0, 0, 1, 2, 0, 0, 1, 2, 0, 1, 2, 2, 5, 2, 4, 2, 6, 3, 119, 112, 135, 162, 144, 72, 76, 49, 75, 56, 96, 69, 28, 5, 0, 0}};

/**
 * @brief     读取频率历史数据
 * @details   记录不同时间点的读取操作频率
 */
inline std::vector<std::vector<int>> READ_COUNT = 
{{1896, 708, 612, 487, 350, 227, 10504, 28574, 43789, 55337, 60403, 59949, 53332, 41476, 25634, 15691, 34842, 59185, 80198, 96468, 107589, 112715, 111312, 103642, 94277, 118751, 115722, 60895, 3267, 409, 575, 723, 770, 740, 597, 405, 261, 188, 228, 387, 506, 680, 720, 701, 609, 464, 7481, 12984, 0}, {1774, 654, 589, 502, 353, 228, 173, 209, 310, 447, 634, 705, 669, 545, 466, 2868, 19696, 37611, 58859, 74762, 78085, 65838, 45669, 48299, 97286, 137527, 115445, 63171, 50063, 71012, 90991, 105856, 110799, 104584, 88966, 68627, 47447, 29782, 12557, 352, 463, 568, 729, 641, 532, 591, 10736, 9593, 0}, {1153, 347, 226, 215, 318, 535, 752, 832, 896, 794, 642, 408, 299, 282, 303, 397, 478, 666, 736, 748, 670, 487, 290, 152, 179, 6058, 39590, 99961, 149185, 140130, 99356, 69861, 56000, 53635, 52588, 63363, 81640, 95063, 103779, 107472, 104674, 98198, 85734, 69260, 49187, 26843, 15632, 9085, 0}, {768, 183, 133, 111, 182, 256, 343, 431, 421, 395, 811, 8808, 18907, 28518, 37292, 50951, 75660, 99278, 123660, 141392, 145143, 131347, 104378, 73835, 107967, 162052, 154512, 78929, 2416, 315, 294, 234, 161, 144, 109, 128, 296, 322, 316, 342, 330, 258, 229, 175, 131, 533, 11099, 8692, 0}, {1504, 355, 364, 355, 268, 163, 111, 90, 139, 219, 370, 453, 459, 480, 394, 275, 171, 135, 134, 176, 245, 368, 454, 492, 353, 216, 162, 12153, 46339, 76448, 107057, 129575, 150441, 188228, 201417, 182606, 136324, 92035, 59633, 55288, 48653, 39864, 29835, 18320, 5958, 556, 10765, 9370, 0}, {841, 435, 454, 531, 605, 562, 516, 402, 288, 273, 282, 2639, 17618, 59527, 115339, 151129, 154005, 123333, 71166, 46813, 30243, 16981, 2313, 553, 556, 547, 520, 397, 9912, 25179, 38196, 53640, 71132, 87402, 101410, 109336, 110780, 104519, 92158, 76535, 58797, 42398, 28938, 16490, 502, 709, 10931, 9845, 0}, {1768, 409, 323, 189, 164, 222, 345, 493, 618, 724, 648, 547, 405, 9114, 61895, 101638, 106188, 82764, 37748, 30555, 39213, 45841, 63571, 78264, 92355, 105014, 111547, 107880, 92017, 69904, 45503, 22147, 5080, 416, 255, 224, 213, 266, 420, 592, 686, 650, 594, 420, 281, 506, 10729, 9397, 0}, {1597, 241, 188, 192, 295, 415, 516, 666, 698, 657, 575, 413, 305, 200, 263, 318, 446, 610, 733, 1323, 24828, 53063, 65785, 58516, 33890, 4192, 425, 17503, 55161, 85985, 105509, 120940, 123987, 112364, 89493, 62128, 61041, 64268, 64494, 62053, 55469, 47345, 36718, 24750, 11360, 886, 10079, 10615, 0}, {1010, 506, 537, 521, 441, 355, 282, 246, 298, 352, 410, 473, 564, 605, 574, 396, 287, 186, 132, 146, 253, 411, 527, 608, 10339, 33511, 55168, 73818, 87603, 97567, 101145, 107681, 114024, 114295, 106296, 89890, 84644, 118536, 144982, 95129, 23613, 321, 417, 584, 551, 469, 10435, 10152, 0}, {1079, 426, 256, 160, 208, 326, 437, 551, 716, 701, 585, 485, 334, 285, 265, 167, 244, 414, 496, 590, 611, 500, 9275, 22481, 33555, 59607, 109825, 148599, 167262, 162920, 147288, 138999, 150699, 154755, 150014, 136215, 113903, 85964, 49533, 14110, 537, 543, 438, 301, 186, 422, 10704, 9331, 0}, {1295, 101, 155, 267, 346, 317, 282, 221, 177, 97, 94, 141, 203, 257, 318, 304, 310, 271, 3917, 18234, 34129, 75965, 120422, 152955, 168627, 165498, 146188, 110881, 64489, 54058, 61495, 55540, 41949, 22695, 1984, 302, 354, 349, 296, 257, 160, 101, 90, 120, 149, 221, 8668, 11983, 0}, {1293, 189, 336, 486, 638, 703, 811, 724, 551, 379, 43769, 115048, 151581, 129957, 107744, 122999, 121367, 100482, 65679, 21189, 186, 174, 277, 447, 584, 637, 684, 1144, 8344, 12545, 18367, 25328, 31876, 37593, 41296, 41894, 39526, 34747, 27875, 20817, 14621, 9457, 2752, 272, 383, 502, 8975, 12400, 0}, {1240, 115, 170, 261, 350, 379, 333, 8366, 36600, 61111, 51094, 21719, 769, 250, 364, 359, 353, 314, 271, 253, 146, 65, 109, 174, 12472, 49601, 89882, 127920, 151972, 155239, 139224, 116967, 93905, 70698, 60488, 47275, 31368, 13970, 1007, 288, 207, 113, 85, 113, 182, 284, 7574, 13118, 0}, {860, 201, 169, 250, 406, 545, 2280, 21017, 42514, 59377, 70836, 74325, 70696, 60352, 42919, 21600, 3439, 48354, 103537, 118853, 88457, 26141, 168, 252, 283, 356, 461, 601, 550, 506, 356, 230, 3972, 15591, 26823, 36964, 45607, 51626, 55524, 56389, 54985, 50814, 43884, 35870, 25311, 14050, 10435, 13094, 0}, {1367, 145, 106, 91, 140, 223, 280, 294, 344, 385, 318, 236, 180, 153, 219, 221, 283, 361, 339, 365, 293, 263, 216, 218, 132, 137, 228, 303, 3006, 32373, 66045, 91996, 112192, 135508, 148377, 146928, 134664, 120687, 155516, 200162, 205177, 165895, 92728, 47284, 30141, 11417, 9486, 10856, 0}, {1111, 544, 468, 299, 245, 229, 246, 342, 452, 2146, 16263, 32107, 46490, 59936, 78136, 125522, 212942, 235723, 181838, 112768, 93905, 69829, 43720, 19028, 467, 188, 167, 154, 220, 312, 446, 478, 553, 560, 460, 357, 284, 241, 211, 286, 391, 535, 524, 565, 448, 740, 11295, 8554, 0}};

/**
 * @brief     标签尺寸数据库
 * @details   记录不同标签的对象大小分布
 */
inline const std::vector<std::vector<double>> TAG_SIZE_DB = {
{}, 
 {0.39754, 0.25757, 0.20634, 0.08946, 0.04906}, 
 {0.35511, 0.25473, 0.22253, 0.13446, 0.03314}, 
 {0.36055, 0.25064, 0.23985, 0.10169, 0.04725}, 
 {0.35727, 0.26086, 0.22495, 0.12003, 0.03686}, 
 {0.35039, 0.26279, 0.22639, 0.11262, 0.04778}, 
 {0.383, 0.24005, 0.21308, 0.11598, 0.04787}, 
 {0.37226, 0.2792, 0.21367, 0.09591, 0.03893}, 
 {0.34844, 0.25014, 0.23072, 0.12242, 0.04826}, 
 {0.34903, 0.24515, 0.24383, 0.10959, 0.05237}, 
 {0.36538, 0.24213, 0.2277, 0.11756, 0.0472}, 
 {0.34603, 0.26131, 0.22814, 0.11878, 0.04571}, 
 {0.40219, 0.22943, 0.21115, 0.10511, 0.0521}, 
 {0.37796, 0.25254, 0.19322, 0.1144, 0.06186}, 
 {0.34933, 0.24497, 0.23381, 0.12388, 0.04799}, 
 {0.3765, 0.23795, 0.21485, 0.12148, 0.04919}, 
 {0.3465, 0.24356, 0.23483, 0.12729, 0.04779}
};
